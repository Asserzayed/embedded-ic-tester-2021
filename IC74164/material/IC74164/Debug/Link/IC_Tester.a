;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x80
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x70
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x60
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x70
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;char I74164(void)
; 0000 004D {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 004E 
; 0000 004F char D = 0b01010101;
; 0000 0050 char X = 0b00000000;
; 0000 0051 char temp=0b00000000;
; 0000 0052 PIND=0b00000000;
;PCODE: $0000000F VOL: 0
;	D -> R17
;	X -> R16
;	temp -> R19
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
; 0000 0053 
; 0000 0054 
; 0000 0055 LED = LOW;
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
; 0000 0056 // Give the CLK LOW
; 0000 0057 SIPO_CLOCK = LOW;
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
; 0000 0058 // INPUTS A,B AND CLR` GIVEN HIGH
; 0000 0059 SIPO_A = HIGH;
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
; 0000 005A SIPO_B = HIGH;
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
; 0000 005B SIPO_CLEAR = HIGH;
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
; 0000 005C 
; 0000 005D 
; 0000 005E // CHECK
; 0000 005F for(i=0;i<2;i++)
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
; 0000 0060 {
; 0000 0061 X=D;
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
; 0000 0062 for(j=0;j<8;j++)
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
; 0000 0063 {
; 0000 0064 temp = ( ( (X & 0b11111111) ^ 0b11111111) )% 2;
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
; 0000 0065 SIPO_A = temp;
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
; 0000 0066 X = (X>>1);
;PCODE: $00000043 VOL: 0
; 0000 0067 // Give a Rising Edge
; 0000 0068 SIPO_CLOCK = HIGH;
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
; 0000 0069 SIPO_CLOCK = LOW;
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
; 0000 006A delay_ms(500);
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
; 0000 006B }
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
; 0000 006C temp=((SIPO_Q7<<7)|(SIPO_Q6<<6)|(SIPO_Q5<<5)|(SIPO_Q4<<4)|(SIPO_Q3<<3)|(SIPO_Q2<<2)|(SIPO_Q1<<1)|(SIPO_Q0));
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
; 0000 006D if(temp == D){
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
; 0000 006E PIND=temp;
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
; 0000 006F check++;
;PCODE: $00000080 VOL: 0
; 0000 0070 LED=HIGH;
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
; 0000 0071 delay_ms(1000);
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
; 0000 0072 LED=LOW;
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
; 0000 0073 }
; 0000 0074 else{
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
; 0000 0075 PIND=temp;
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
; 0000 0076 delay_ms(1000);
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
; 0000 0077 PIND=0b00000000;
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
; 0000 0078 }
;PCODE: $0000008F VOL: 0
; 0000 0079 D = D^0b11111111;
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
; 0000 007A PORTD=0b00000000;
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
; 0000 007B delay_ms(2000);
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
; 0000 007C }
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
; 0000 007D delay_ms(500);
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
; 0000 007E // APPLY CLR AND CHECK
; 0000 007F SIPO_CLEAR = LOW;
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
; 0000 0080 SIPO_CLEAR = HIGH;
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
; 0000 0081 //    if( ((SIPO_Q7 * (2^7) )+ (SIPO_Q6 * (2^6) )+ (SIPO_Q5 *(2^5))+ (SIPO_Q4*(2^4))+ (SIPO_Q3*(2^3))+(SIPO_Q2*(2^2))+ (SIPO_Q1*(2^1))+ (SIPO_Q0*(1))) == 0)
; 0000 0082 //    {
; 0000 0083 //       check++;
; 0000 0084 //       //LED=HIGH;
; 0000 0085 //       //delay_ms(3000);
; 0000 0086 //       //LED=LOW;
; 0000 0087 //    }
; 0000 0088 return 0;
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
; 0000 0089 }
;PCODE: $000000A5 VOL: 0
;void main(void)
; 0000 008C {
;PCODE: $000000A6 VOL: 0
; 0000 008D LED=HIGH;
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
; 0000 008E delay_ms(500);
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
; 0000 008F LED=LOW;
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
; 0000 0090 // Input/Output Ports initialization
; 0000 0091 // Port A initialization
; 0000 0092 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=Out Bit0=Out
; 0000 0093 DDRA=(0<<DDA7) | (0<<DDA6) | (0<<DDA5) | (0<<DDA4) | (0<<DDA3) | (0<<DDA2) | (1<<DDA1) | (1<<DDA0);
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
; 0000 0094 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=0 Bit0=0
; 0000 0095 PORTA=(0<<PORTA7) | (0<<PORTA6) | (0<<PORTA5) | (0<<PORTA4) | (0<<PORTA3) | (0<<PORTA2) | (0<<PORTA1) | (0<<PORTA0);
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
; 0000 0096 
; 0000 0097 // Port C initialization
; 0000 0098 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=Out Bit0=Out
; 0000 0099 DDRC=(0<<DDC7) | (0<<DDC6) | (0<<DDC5) | (0<<DDC4) | (0<<DDC3) | (0<<DDC2) | (1<<DDC1) | (1<<DDC0);
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
; 0000 009A // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=0 Bit0=0
; 0000 009B PORTC=(0<<PORTC7) | (0<<PORTC6) | (0<<PORTC5) | (0<<PORTC4) | (0<<PORTC3) | (0<<PORTC2) | (0<<PORTC1) | (0<<PORTC0);
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
; 0000 009C 
; 0000 009D // Port D initialization
; 0000 009E // Function: Bit7=Out Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 009F DDRD=(1<<DDD7) | (0<<DDD6) | (0<<DDD5) | (0<<DDD4) | (0<<DDD3) | (0<<DDD2) | (0<<DDD1) | (0<<DDD0);
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
; 0000 00A0 // State: Bit7=0 Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0000 00A1 PORTD=(0<<PORTD7) | (0<<PORTD6) | (0<<PORTD5) | (0<<PORTD4) | (0<<PORTD3) | (0<<PORTD2) | (0<<PORTD1) | (0<<PORTD0);
;PCODE: $000000B7 VOL: 0
;PCODE: $000000B8 VOL: 0
; 0000 00A2 
; 0000 00A3 
; 0000 00A4 while(1)
;PCODE: $000000B9 VOL: 0
; 0000 00A5 {
; 0000 00A6 I74164();
;PCODE: $000000BA VOL: 0
; 0000 00A7 if(check==3){
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
; 0000 00A8 delay_ms(500);
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
; 0000 00A9 LED=LOW;
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
; 0000 00AA }
; 0000 00AB delay_ms(2000);
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
;PCODE: $000000C4 VOL: 0
; 0000 00AC check=0;
;PCODE: $000000C5 VOL: 0
; 0000 00AD }
;PCODE: $000000C6 VOL: 0
;PCODE: $000000C7 VOL: 0
; 0000 00AE }
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
;PCODE: $000000CA VOL: 0
